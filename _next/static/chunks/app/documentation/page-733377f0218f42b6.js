(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4154],{1527:(t,e,n)=>{Promise.resolve().then(n.bind(n,2515))},8455:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var i=n(7437),a=n(2265),o=n(7377),r=n.n(o),l=n(5097);let s=t=>{let e,n,{setSelectedFilter:o}=t,[s,c]=(0,a.useState)(null),[p,d]=(0,a.useState)("V1"),[g,h]=(0,a.useState)(!1);return(0,a.useEffect)(()=>{let t=()=>{h(window.innerWidth<=885)};return t(),window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)},[]),(0,i.jsx)("div",{className:r()["filter-container"],children:(0,i.jsx)("div",{className:r()["options-list"],children:(0,i.jsxs)("div",{className:r()["filter-group"],children:[(0,i.jsxs)("div",{className:r()["filter-header"],children:[(0,i.jsx)("h3",{children:"Select Version Type"}),(0,i.jsx)("div",{className:r().filterIconWrapper,children:(0,i.jsx)(l.FpS,{className:r().filterIcon,onClick:()=>h(t=>!t)})})]}),(0,i.jsx)("div",{className:"".concat(r()["button-group"]," ").concat(g?r()["show-on-mobile"]:""),children:(e=[{key:"V1",label:"Cloud Managed Auth"},{key:"V2",label:"Locally Managed Auth"},{key:"V3",label:"Plugin Driven"}],n=t=>{d(t),o({app_type:s,version_type:t}),h(!1)},e.map(t=>{let{key:e,label:a}=t;return(0,i.jsx)("button",{className:"".concat(r()["option-button"]," ").concat(p===e?r().active:""),onClick:()=>n(e),type:"button",children:a},e)}))})]})})})}},4009:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var i=n(7437);n(2265);var a=n(8867);function o(t){let{selectedFilter:e}=t;console.log("Here is the glimpse of selectedFilter?",e);let n=null==e?void 0:e.app_type,o=null==e?void 0:e.version_type;return console.log("appType:",n),console.log("versionType:",o),console.log("sdfsdfsdfversionType",o),(0,i.jsx)("div",{children:o?(0,i.jsx)(a.default,{content:{V1:[{tag_type:"ol",items:[{tag_type:"li",text:"Integration",sub_items:[{tag_type:"li",text:"Prerequisite1",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(3) > div:nth-child(1) > h2"}},{tag_type:"li",text:"Client Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div:nth-child(3) > ol > li:nth-child(1) > div:nth-child(1) > div > span"}}],link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}}],property:{collapse:{collapsable:!0,fc_non_collapsable:!0}}}],V2:[{tag_type:"ol",items:[{tag_type:"li",text:"Integration",sub_items:[{tag_type:"li",text:"Prerequisite",link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}},{tag_type:"li",text:"Client Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div:nth-child(2) > h2"}},{tag_type:"li",text:"Backend Integration",link_configuration:{show:!0,type:"internal",targetSelector:".second_subheading"}}],link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}}],property:{collapse:{collapsable:!0,fc_non_collapsable:!0}}}],V3:[{tag_type:"ol",items:[{tag_type:"li",text:"Integration",sub_items:[{tag_type:"li",text:"Prerequisite",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(3) > div:nth-child(1) > h2"}},{tag_type:"li",text:"Client Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div:nth-child(2) > h3"}}],link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}}],property:{collapse:{collapsable:!0,fc_non_collapsable:!0}}}]}[o]},"".concat(o)):(0,i.jsx)("div",{children:"Please select a valid application type and version"})})}},2515:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>h});var i=n(7437),a=n(2265);n(9590);var o=n(3612),r=n.n(o),l=n(6463);let s={V1:[{tag_type:"h2",text:"Cloud Managed Auth [V1]"},{tag_type:"p",text:"This type of chat application is tailored for simple websites built with HTML, JavaScript, and CSS, typically used as informational sites. It is ideal for scenarios where the existing product lacks built-in authentication but requires the seamless integration of both authentication and chat functionality.\n"},{tag_type:"div",children:[{tag_type:"h2",text:"Prerequisite"},{tag_type:"p",text:"To integrate Chat into your app, do the following:"},{tag_type:"ol",items:[{text:"Signup/Login to your account at MagicChat.",link_parts:[{text:"Signup/Login",link:"https://www.google.com/"}]},{tag_type:"li",text:"Create an app as per your use case. (Be Sure to choose the right Mode [Headless | HEADFUL])"},{tag_type:"li",text:"Go To created app's  detail page and locate the credentials."}]}]},{tag_type:"div",children:[{tag_type:"h2",text:"Project setup"},{tag_type:"p",text:"To integrate Chat into your app, do the following:"},{tag_type:"ol",items:[{tag_type:"li",text:"Load The Scripts",sub_items:[{tag_type:"div",children:[{tag_type:"p",text:"Locate the main entry file, typically index.html, and insert the following code snippet into the <head> section of the HTML document."},{tag_type:"p",text:"It should ideally be placed head of the root file."},{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.socket.io/4.1.2/socket.io.min.js"></script>'}]},{tag_type:"div",children:[{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.jsdelivr.net/gh/codekeep18feb/addchat-client-cdn-files@v1.0.2/bundle.js"></script>'}]}]},{tag_type:"li",text:"Running Magicchat Setup Requires two steps",sub_items:[{tag_type:"div",children:[{tag_type:"h4",text:"Step 1 – setup on first Logged-Out Screens"},{tag_type:"p",text:"Run the setUp function when the user is first detected as logged out. This typically applies to your app's landing page or root URL (/), where no authentication token is present."},{tag_type:"code",show_copy:!0,text:'<script>\n              document.addEventListener("DOMContentLoaded", async function () {\n                const token = localStorage.getItem("tezkit_token");\n                if (!token) {\n                  await window.chathead.setUp(\n                    "v1app1", // app_name\n                    "bGVnYWxob3VzZV9fU0VQUkFUT1JfX3YxYXBwMQ==", // api_key\n                    JSON.stringify({\n                      header_theme: {\n                        backgroundColor: "rgb(163, 112, 206)",\n                        textColor: "white",\n                      },\n                      chat_opener_theme: {\n                        backgroundColor: "rgb(163, 112, 206)",\n                        textColor: "white",\n                      },\n                      chat_box_theme: {\n                        backgroundColor: "red",\n                        textColor: "black",\n                      },\n                    }), // theme\n                    true,  // header_req (HEADER FULL :: header will be added)\n                    "/", // redirect_url after login\n                  );\n                } \n              });\n            </script>'},{tag_type:"callout",type:"info",title:"Parameter Details",children:[{tag_type:"table",headers:["Parameter","Type","Description"],rows:[["app_name","string","Unique identifier for your application (provided during registration)"],["api_key","string","Base64 encoded API key for authentication"],["theme","string (JSON)","Theme configuration object as a JSON string"],["header_req","boolean","Set to true to display header with user controls"],["redirect_url","string","URL to redirect to after successful login"]]},{tag_type:"callout",type:"warning",title:"Theme Configuration",children:[{tag_type:"p",text:"The theme parameter requires a JSON string with these nested objects:"},{tag_type:"ul",items:[{text:"header_theme - Styles for the chat header",sub_items:[{text:"backgroundColor: CSS color value"},{text:"textColor: CSS color value"}]},{text:"chat_opener_theme - Styles for the chat opener button",sub_items:[{text:"backgroundColor: CSS color value"},{text:"textColor: CSS color value"}]},{text:"chat_box_theme - Styles for the main chat container",sub_items:[{text:"backgroundColor: CSS color value"},{text:"textColor: CSS color value"}]}]}]}]}]},{tag_type:"div",children:[{tag_type:"h4",text:"Step 2 – Initialize on first Logged-In Screens"},{tag_type:"p",text:"Run the initialize function on any screen that is accessible after login, where you want the chatbot to appear (e.g., bottom right corner)."},{tag_type:"code",show_copy:!0,text:'<script>\n              document.addEventListener("DOMContentLoaded", async function () {\n                const token = localStorage.getItem("tezkit_token");\n                if (token) {\n                  await window.chathead.initialize(token);\n                } \n              });\n            </script>'},{tag_type:"callout",type:"info",title:"Parameter Details",children:[{tag_type:"table",headers:["Parameter","Type","Description"],rows:[["token","string","User authentication token obtained after login"]]},{tag_type:"mesgTip",title:"Token Handling",children:[{tag_type:"p",text:"The token should be stored in localStorage after successful authentication and retrieved as shown in the example."}]}]}]}]}]},{tag_type:"tabs",items:[{label:"Full Header Mode",content:[{tag_type:"h3",text:"Complete Authentication Header Solution"},{tag_type:"p",text:"When you set `header_req` to `true`, MagicChat will automatically add a fully functional header to your application that includes:"},{tag_type:"ul",items:[{text:"User authentication controls (login/logout)"},{text:"User profile management"},{text:"Notification indicators"},{text:"Branding area"},{text:"Responsive navigation menu"}]},{tag_type:"callout",type:"info",title:"Best For",children:[{tag_type:"p",text:"Applications without an existing header or those looking for a complete out-of-the-box authentication solution."}]},{tag_type:"img",src:"Asset/header_ful.png",alt:"MagicChat Full Header Implementation"},{tag_type:"h4",text:"Implementation Code"},{tag_type:"code_with_copy",code:'window.chathead.setUp(\n          "<Your App Name>", \n          "<Your Api Key>", \n          JSON.stringify({\n            "header_theme": {\n              "backgroundColor": "rgb(30, 136, 125)", // Header background\n              "textColor": "#ffffff",                  // Header text color\n              "logoUrl": "/path/to/your/logo.png"      // Optional custom logo\n            },\n            "chat_opener_theme": {\n              "backgroundColor": "rgb(41, 48, 78)",    // Chat button color\n              "iconColor": "#ffffff"                   // Chat icon color\n            }\n          }),\n          true, // ENABLE FULL HEADER\n          "/dashboard" // Redirect after login\n        );',language:"javascript"},{tag_type:"callout",type:"success",title:"Customization Options",children:[{tag_type:"table",headers:["Property","Description","Default"],rows:[["backgroundColor","Header background color","Brand primary"],["textColor","Text and icon colors","#ffffff"],["logoUrl","Custom logo image URL","MagicChat logo"],["height","Header height in pixels","60px"]]}]}]},{label:"Header-Less Mode",content:[{tag_type:"h3",text:"Custom Authentication Placement"},{tag_type:"p",text:"Set `header_req` to `false` when you already have a header or want to place authentication components in specific locations."},{tag_type:"steps",items:[{title:"Step 1: Initialize MagicChat",content:[{tag_type:"code_with_copy",code:'window.chathead.setUp(\n          "<Your App Name>", \n          "<Your Api Key>", \n          JSON.stringify({\n            "chat_opener_theme": {\n              "backgroundColor": "rgb(41, 48, 78)" // Chat button color\n            }\n          }),\n          false, // DISABLE MAGICCHAT HEADER\n          "/dashboard" // Redirect after login\n        );',language:"javascript"}]},{title:"Step 2: Place Authentication Components",content:[{tag_type:"p",text:"Add this container where you want authentication controls to appear:"},{tag_type:"code_with_copy",code:'<div id="tezkit-auth-area" class="custom-auth-styles"></div>'}]},{title:"Step 3: Customize Styling (Optional)",content:[{tag_type:"p",text:"Add CSS to match your existing design:"},{tag_type:"code_with_copy",code:"#tezkit-auth-area {\n          display: flex;\n          gap: 12px;\n          align-items: center;\n        }\n        \n        /* Style login/logout buttons */\n        .tezkit-auth-button {\n          padding: 8px 16px;\n          border-radius: 4px;\n          background-color: #4a6cf7;\n          color: white;\n          cursor: pointer;\n        }"}]}]},{tag_type:"img",src:"Asset/header_less.png",alt:"Custom Authentication Placement"},{tag_type:"callout",type:"warning",title:"Important Implementation Notes",children:[{tag_type:"ul",items:[{text:"Place the container in your header or wherever authentication should appear"},{text:"Multiple containers are supported for complex layouts"},{text:"Components automatically adapt to authentication state"},{text:"Elements will render as:",sub_items:[{text:"Login/Signup buttons when logged out"},{text:"User avatar + dropdown when logged in"}]}]}]},{tag_type:"callout",type:"info",title:"Available Authentication Components",children:[{tag_type:"table",headers:["Component","Selector","Description"],rows:[["User Avatar",".tezkit-user-avatar","Profile picture with dropdown menu"],["Login Button",".tezkit-login-btn","Triggers login flow"],["Signup Button",".tezkit-signup-btn","Triggers registration flow"],["User Menu",".tezkit-user-menu","Dropdown with profile options"]]}]}]}]},{tag_type:"callout",type:"info",title:"Implementation Best Practices",children:[{tag_type:"h4",text:"Centralized Implementation"},{tag_type:"p",text:"For applications with a common root layout (e.g., main index.js or layout component that renders on every route):"},{tag_type:"ul",items:[{text:"Combine both setUp and initialize logic in a single location"},{text:"This ensures the chatbox renders consistently across all routes"},{text:"Avoids code duplication across screens"}]},{tag_type:"h4",text:"Route-Specific Implementation"},{tag_type:"p",text:"To limit chat functionality to specific routes:"},{tag_type:"ul",items:[{text:"Initialize only on screens where chat is needed"},{text:"Use the initialize method on specific route components"},{text:"Provides more control over chat visibility"}]},{tag_type:"h4",text:"Example Implementation"},{tag_type:"p",text:"See this complete example implementation in our GitHub repository:"},{tag_type:"a",href:"https://github.com/magicchat-core/example__v1/blob/a98e8902079c3c40062751d675a90a8ad0cae302/index.html#L16",text:"View Full Implementation Example"},{tag_type:"callout",type:"info",title:"Future Improvements",children:[{tag_type:"p",text:"We're working to simplify route-specific implementations in upcoming releases."}]}]},{tag_type:"video",src:"https://www.youtube.com/watch?v=MKatoeFYeb8",desc:"Demo for P2A V1 [Headful]"}]}],V2:[{tag_type:"h2",text:"Locally Managed Auth + Chat (Complex Sites) -  [V2]"},{tag_type:"p",text:"This chat application is designed specifically for complex sites or apps built with JavaScript on both the client and server sides. It is ideal for products that already have built-in authentication and are looking to seamlessly integrate robust chat functionality."},{tag_type:"div",children:[{tag_type:"h2",text:"Prerequisite"},{tag_type:"ol",items:[{text:"Signup/Login to your account at MagicChat.",link_parts:[{text:"Signup/Login",link:"https://www.google.com/"}]},{tag_type:"li",text:"Create a New App and be sure to select Version V2 during setup."},{tag_type:"li",text:"Navigate to the App Details page and note your: , App Name, API Key, Tenant ID"}]}]},{tag_type:"div",children:[{tag_type:"h2",text:"Project setup"},{tag_type:"h4",text:"Client Side Integration"},{tag_type:"p",text:"To integrate it into your app, Do the following."},{tag_type:"ol",items:[{tag_type:"li",text:"Load The Scripts",sub_items:[{tag_type:"li",text:"Locate the main entry file, typically index.html, and insert the following code snippet into the <head> section of the HTML document.",extra_text:"It should ideally be placed head of the root file.",code:'<script src="https://cdn.socket.io/4.1.2/socket.io.min.js"></script>'},{tag_type:"li",code:'\n<script src="https://cdn.jsdelivr.net/gh/codekeep18feb/addchat-client-cdn-files@v1.0.2/bundle.js">\n</script>'}]},{tag_type:"li",text:"Running Magicchat Setup Requires two steps",sub_items:[{tag_type:"li",text:"Step 1 – Initialize on first Logged-Out Screens",extra_text:"Run the setUp function when the user is first detected as logged out. This typically applies to your app's landing page or root URL (/), where no authentication token is present.",code:'<script>\n        document.addEventListener("DOMContentLoaded", async function () {\n          const token = localStorage.getItem("tezkit_token");\n          if (!token) {\n            await window.chathead.setUp(\n              "v1app1", // app_name\n              "bGVnYWxob3VzZV9fU0VQUkFUT1JfX3YxYXBwMQ==", // api_key\n              JSON.stringify({\n                header_theme: {\n                  backgroundColor: "rgb(163, 112, 206)",\n                  textColor: "white",\n                },\n                chat_opener_theme: {\n                  backgroundColor: "rgb(163, 112, 206)",\n                  textColor: "white",\n                },\n                chat_box_theme: {\n                  backgroundColor: "red",\n                  textColor: "black",\n                },\n              }), // theme\n              true,  // header_req (HEADER FULL :: header will be added)\n              "/", // redirect_url after login\n            );\n\n          } \n        });\n      </script>\n\n\n'},{tag_type:"li",text:"Step 2 – Initialize on first Logged-In Screens",extra_text:"Run the initialize function on any screen that is accessible after login, where you want the chatbot to appear (e.g., bottom right corner).",code:'    \n    <script>\n      document.addEventListener("DOMContentLoaded", async function () {\n        const token = localStorage.getItem("tezkit_token");\n        if (token) {\n          await window.chathead.initialize(token);\n        } \n      });\n    </script>\n\n'}]}]},{tag_type:"callout",type:"info",title:"Implementation Best Practices",children:[{tag_type:"h4",text:"Centralized Implementation"},{tag_type:"p",text:"For applications with a common root layout (e.g., main index.js or layout component that renders on every route):"},{tag_type:"ul",items:[{text:"Combine both setUp and initialize logic in a single location"},{text:"This ensures the chatbox renders consistently across all routes"},{text:"Avoids code duplication across screens"}]},{tag_type:"h4",text:"Route-Specific Implementation"},{tag_type:"p",text:"To limit chat functionality to specific routes:"},{tag_type:"ul",items:[{text:"Initialize only on screens where chat is needed"},{text:"Use the initialize method on specific route components"},{text:"Provides more control over chat visibility"}]},{tag_type:"h4",text:"Example Implementation"},{tag_type:"p",text:"See this complete example implementation in our GitHub repository:"},{tag_type:"a",href:"https://github.com/magicchat-core/example__v2/blob/4c71eb9d286538189f386d8ec7f8fc4dd1764ff0/templates/base.html#L151",text:"View Full Implementation Example"},{tag_type:"callout",type:"info",title:"Future Improvements",children:[{tag_type:"p",text:"We're working to simplify route-specific implementations in upcoming releases."}]}]},{tag_type:"h2",text:"Backend Integration"},{tag_type:"p",text:"For platforms with existing authentication systems, MagicChat requires user onboarding to establish identity mapping between your platform users and MagicChat accounts."},{tag_type:"callout",type:"info",title:"Key Integration Requirement",children:[{tag_type:"p",text:"Each new user must be onboarded with a unique identifier (UID) that serves as the proxy between your platform and MagicChat's user management system."}]},{tag_type:"h3",text:"Onboarding API"},{tag_type:"p",text:"Successfully onboarded users will appear in the MagicChat Admin Panel with their associated applications."},{tag_type:"steps",items:[{title:"Admin Panel - Onboarded Users",content:[{tag_type:"img",src:"Asset/onboarded_user.png",alt:"MagicChat Admin Panel showing onboarded users"}]},{title:"Admin Panel - No Users",content:[{tag_type:"p",text:"Applications without onboarded users will display an empty state:"},{tag_type:"img",src:"Asset/no_users_admin.png",alt:"MagicChat Admin Panel showing no onboarded users"}]}]},{tag_type:"h3",text:"User Onboarding Methods"},{tag_type:"tabs",items:[{label:"Backend Integration",content:[{tag_type:"h4",text:"REST API Endpoint"},{tag_type:"p",text:"Use our onboarding API to programmatically register users:"},{tag_type:"code_with_copy",code:"POST https://auth.addchat.tech/dev/onboarding",language:"http"},{tag_type:"h4",text:"Request Example"},{tag_type:"code_with_copy",code:'curl --location \'https://auth.addchat.tech/dev/onboarding\' \\\n      --header \'X-API-Key: YOUR_API_KEY\' \\\n      --header \'Content-Type: application/json\' \\\n      --data \'{\n        "uid": "unique_user_identifier_123",\n        "app_name": "your_application_name",\n        "version": "V2"\n      }\'',language:"bash"},{tag_type:"table",headers:["Parameter","Type","Description"],rows:[["uid","string","Your platform's unique user identifier"],["app_name","string","Your registered MagicChat application name"],["version","string","for locally managed auth API version is `V2`"]]}]},{label:"Frontend Integration",content:[{tag_type:"h4",text:"Client-Side Onboarding"},{tag_type:"p",text:"Call the onboarding method directly from your frontend code:"},{tag_type:"code_with_copy",code:'await window.chathead.onboarding(\n        { \n          "uid": "UNIQUE_USER_ID_FROM_YOUR_PLATFORM" \n        },\n        {\n          "version": "V2",\n          "app_name": "your_application_name"\n        }\n      )',language:"javascript"},{tag_type:"callout",type:"warning",title:"Implementation Note",children:[{tag_type:"p",text:"This method should be called immediately after successful user registration in your application."}]}]},{label:"Admin Panel",content:[{tag_type:"h4",text:"Manual User Onboarding"},{tag_type:"p",text:"Manually onboard users through the MagicChat Admin Interface:"},{tag_type:"img",src:"Asset/onboarding_via_admin.png",alt:"MagicChat Admin Panel user onboarding interface"},{tag_type:"steps",items:[{title:"Navigate to Users Section",content:[{tag_type:"p",text:"Access the Users management area in your application's admin panel"}]},{title:"Select 'Add User'",content:[{tag_type:"p",text:"Complete the user creation form with required details"}]},{title:"Share Credentials",content:[{tag_type:"p",text:"Provide the generated credentials to the end-user through secure channels"}]}]}]}]},{tag_type:"callout",type:"info",title:"Implementation Best Practices",children:[{tag_type:"ul",items:[{text:"Trigger onboarding immediately after user registration"},{text:"For bulk onboarding of existing users, contact our support team for batch processing options"}]}]},{tag_type:"video",src:"https://www.youtube.com/watch?v=MKatoeFYeb8",desc:"Demo for V2"}]}],V3:[{tag_type:"h2",text:"Locally Managed Auth + Chat (Wordpress)"},{tag_type:"p",text:"This chat application is designed specifically for Wordpress using native wp authentication. It is ideal for products that already have built-in authentication probably using some plugin and are looking to seamlessly integrate robust chat functionality."},{tag_type:"div",children:[{tag_type:"h2",text:"Prerequisite"},{tag_type:"p",text:"To integrate Chat into your app, do the following:"},{tag_type:"ol",items:[{text:"Signup/Login to your account at MagicChat.",link_parts:[{text:"Signup/Login",link:"https://www.google.com/"}]},{tag_type:"li",text:"Create an app as per your use case. (Be Sure to choose the right version V3)"},{tag_type:"li",text:"Go To created app's  detail page and locate the credentials."}]}]},{tag_type:"div",children:[{tag_type:"h2",text:"Project Setup"},{tag_type:"h3",text:"Client Side Integration"},{tag_type:"callout",type:"success",title:"Plugin Installation",children:[{tag_type:"div",children:[{tag_type:"div",children:[{tag_type:"h4",text:"MagicChat WordPress Plugin"},{tag_type:"p",text:"Version 2.3.1 | 2.4 MB | Updated: 2023-11-15"}]},{tag_type:"div",children:[{tag_type:"ul",items:[{text:"One-click installation"},{text:"Compatible with WordPress 5.0+"},{text:"Tested with PHP 7.4-8.2"}]},{tag_type:"a",href:"/addChatPlugin.zip",text:"Download Plugin",download:!0}]}]}]},{tag_type:"steps",items:[{title:"Add MagicChat Credentials",content:[{tag_type:"p",text:"After installing the plugin, navigate to MagicChat settings in your WordPress admin panel and enter your credentials:"},{tag_type:"img",src:"Asset/add_credentials_wp.png",alt:"MagicChat credentials configuration in WordPress"}]},{title:"Verify Integration",content:[{tag_type:"p",text:"Confirm the chat utility appears correctly on your site:"},{tag_type:"img",src:"Asset/fashoni_chat_opener_visible.png",alt:"MagicChat opener visible on website"}]}]},{tag_type:"div",children:[{tag_type:"h4",text:"Integration Walkthrough"},{tag_type:"p",text:"Watch this tutorial below for complete setup instructions:"},{tag_type:"video",src:"https://www.youtube.com/watch?v=MKatoeFYeb8",desc:"MagicChat WordPress Integration Tutorial"}]}]}]};n(551);var c=n(8455),p=n(4009),d=n(8867);let g=()=>{let[t,e]=(0,a.useState)({app_type:null,version_type:"V1"});console.log("do we have a fitler???selectedFilter",t),(0,l.useSearchParams)();let[n,o]=(0,a.useState)(null),[g,h]=(0,a.useState)(Object.keys(s).V1);console.log(g,"why selected key is not 'P2A'");let[u,_]=(0,a.useState)(!1),[y,m]=(0,a.useState)(!1);(0,a.useEffect)(()=>{if(t){let e=function(t){let e=t.app_types,n=[];for(let r in e){console.log(r,"hwo to get mode",t);let l=e[r].version_types;for(let e in l){var i,a;n.push("".concat(r,"__").concat(e));let l=null===(a=t.app_types[r])||void 0===a?void 0:null===(i=a.version_types[e])||void 0===i?void 0:i.selected_mode;console.log("modesdfsdafsd",l),l&&o(l)}}return n}(t);console.log(e,"keyscurrent sleelcteoirn",t,e),1==e.length&&setSelectedTab(e[0])}},[t]);let f=t=>{console.log("WRWERWEQRWE",t),h(t)},x=()=>{_(t=>!t)};return(0,a.useEffect)(()=>{let t=()=>{m(window.innerWidth<=468)};return t(),window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)},[]),(0,a.useEffect)(()=>{let t=()=>{m(window.innerWidth<=1025)};return t(),window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)},[]),(0,i.jsx)("div",{className:r()["document-container"],children:(0,i.jsxs)("div",{className:r().doc_core_wrapper,children:[!y&&(0,i.jsx)("div",{className:r().doc_sidebar,children:(0,i.jsx)(p.Z,{isMobile:y,selectedKey:g,isDropdownOpen:u,toggleDropdown:x,payload:s,handleKeyClick:f,selectedFilter:t})}),(0,i.jsx)("div",{className:r().rightWrap,children:(0,i.jsxs)("div",{className:r()["main-content"],children:[(0,i.jsx)(c.Z,{setSelectedFilter:e}),y&&(0,i.jsx)("div",{className:r().mobileSidebarWrapper,children:(0,i.jsx)(p.Z,{isMobile:y,selectedKey:g,isDropdownOpen:u,toggleDropdown:x,payload:s,handleKeyClick:f,selectedFilter:t})}),t?(0,i.jsxs)(i.Fragment,{children:[(()=>{if(console.log("selesdtsdfilter",t),!t||!t.version_type)return(0,i.jsx)("div",{children:"Select a key from the left"});let e=s[t.version_type];return console.log(t,"DScontentSDFASDSDFFSAD",e),(0,i.jsx)("div",{className:r()["content-area"],children:(0,i.jsx)(d.default,{content:e},4444)})})(),(0,i.jsxs)("div",{className:r().integration_successful,children:[(0,i.jsx)("p",{children:"Congratulations Integration Should be Successfully Done by now!"}),(0,i.jsx)("p",{children:"Your users can now sign up and seamlessly chat with the Admin Team, enabling two-way communication."}),(0,i.jsx)("p",{children:"Please Contact Our Support Team if you faced any issues. Thank You!"})]})]}):(0,i.jsx)("div",{className:r().noFilterMessage,children:"Kinldy select the right filters for you from top."})]})})]})})},h=()=>(0,i.jsx)(a.Suspense,{fallback:(0,i.jsx)("div",{children:"Loading..."}),children:(0,i.jsx)(g,{})})},9590:()=>{},7377:t=>{t.exports={"filter-container":"filterSty_filter-container__1BeqS","options-list":"filterSty_options-list__H9Qw6","filter-group":"filterSty_filter-group__2N0S2","mobile-dropdown-wrapper":"filterSty_mobile-dropdown-wrapper__KQlh_","button-group":"filterSty_button-group__DLD_2","option-button":"filterSty_option-button__Z0ccI",active:"filterSty_active__3vt_K",filterIconWrapper:"filterSty_filterIconWrapper__zVJ4o","option-container":"filterSty_option-container__AB_bi","submit-btn":"filterSty_submit-btn__9ODrv","filter-header":"filterSty_filter-header__a_vsF",filterIcon:"filterSty_filterIcon__0WjtP","show-on-mobile":"filterSty_show-on-mobile__1JaWi"}},3612:t=>{t.exports={"content-area":"docPageSty_content-area__heU1U","document-container":"docPageSty_document-container__ES_cf",doc_core_wrapper:"docPageSty_doc_core_wrapper__8iYQS",doc_sidebar:"docPageSty_doc_sidebar__Cn_h3",rightWrap:"docPageSty_rightWrap__YUmnZ","main-content":"docPageSty_main-content__YiGGW",mainHeading:"docPageSty_mainHeading__e8kU5",integration_successful:"docPageSty_integration_successful__dHRO2",noFilterMessage:"docPageSty_noFilterMessage__roUrm",mobileSidebarWrapper:"docPageSty_mobileSidebarWrapper__17wmU","content-link":"docPageSty_content-link__MODPl"}}},t=>{var e=e=>t(t.s=e);t.O(0,[6973,4837,7240,5706,3981,7130,6215,1744],()=>e(1527)),_N_E=t.O()}]);