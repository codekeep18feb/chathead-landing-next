(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4154],{4169:(t,e,i)=>{Promise.resolve().then(i.bind(i,2515))},8455:(t,e,i)=>{"use strict";i.d(e,{Z:()=>l});var a=i(7437),n=i(2265),o=i(7377),r=i.n(o),s=i(5097);let l=t=>{let e,i,{setSelectedFilter:o}=t,[l,c]=(0,n.useState)(null),[p,d]=(0,n.useState)("V1"),[g,h]=(0,n.useState)(!1);return(0,n.useEffect)(()=>{let t=()=>{h(window.innerWidth<=885)};return t(),window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)},[]),(0,a.jsx)("div",{className:r()["filter-container"],children:(0,a.jsx)("div",{className:r()["options-list"],children:(0,a.jsxs)("div",{className:r()["filter-group"],children:[(0,a.jsxs)("div",{className:r()["filter-header"],children:[(0,a.jsx)("h3",{children:"Select Version Type"}),(0,a.jsx)("div",{className:r().filterIconWrapper,children:(0,a.jsx)(s.FpS,{className:r().filterIcon,onClick:()=>h(t=>!t)})})]}),(0,a.jsx)("div",{className:"".concat(r()["button-group"]," ").concat(g?r()["show-on-mobile"]:""),children:(e=[{key:"V1",label:"Instant Auth + Chat"},{key:"V2",label:"BYO Auth Chat"},{key:"V3",label:"CMS-Ready Chat"},{key:"V4",label:"No Auth Only Chat"}],i=t=>{d(t),o({app_type:l,version_type:t}),h(!1)},e.map(t=>{let{key:e,label:n}=t;return(0,a.jsx)("button",{className:"".concat(r()["option-button"]," ").concat(p===e?r().active:""),onClick:()=>i(e),type:"button",children:n},e)}))})]})})})}},4009:(t,e,i)=>{"use strict";i.d(e,{Z:()=>o});var a=i(7437);i(2265);var n=i(8867);function o(t){let{selectedFilter:e}=t;console.log("Here is the glimpse of selectedFilter?",e);let i=null==e?void 0:e.app_type,o=null==e?void 0:e.version_type;return console.log("appType:",i),console.log("versionType:",o),console.log("sdfsdfsdfversionType",o),(0,a.jsx)("div",{children:o?(0,a.jsx)(n.default,{content:{V1:[{tag_type:"ol",items:[{tag_type:"li",text:"Integration",sub_items:[{tag_type:"li",text:"Prerequisite",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(3) > div:nth-child(1) > h2"}},{tag_type:"li",text:"Client Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > h2"}},{tag_type:"li",text:"Code Example",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > div.renderingToolSty_callout__7ZUMr.renderingToolSty_callout-info__gccVq > div:nth-child(2) > div > button"}}],link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}}],property:{collapse:{collapsable:!0,fc_non_collapsable:!0}}}],V2:[{tag_type:"ol",items:[{tag_type:"li",text:"Integration",sub_items:[{tag_type:"li",text:"Prerequisite",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(3) > div > h2"}},{tag_type:"li",text:"Client Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > h2:nth-child(1)"}},{tag_type:"li",text:"Code Example",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > div:nth-child(5) > div:nth-child(2) > div > button"}},{tag_type:"li",text:"Backend Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > h2:nth-child(6)"}}],link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}}],property:{collapse:{collapsable:!0,fc_non_collapsable:!0}}}],V3:[{tag_type:"ol",items:[{tag_type:"li",text:"Integration",sub_items:[{tag_type:"li",text:"Prerequisite",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(3) > div > h2"}},{tag_type:"li",text:"Client Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > h2"}}],link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}}],property:{collapse:{collapsable:!0,fc_non_collapsable:!0}}}],V4:[{tag_type:"ol",items:[{tag_type:"li",text:"Integration",sub_items:[{tag_type:"li",text:"Prerequisite",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(3) > div > h2"}},{tag_type:"li",text:"Client Integration",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > h2:nth-child(1)"}},{tag_type:"li",text:"Code Example",link_configuration:{show:!0,type:"internal",targetSelector:"body > div > div > div.docPageSty_rightWrap__YUmnZ > div > div.docPageSty_content-area__heU1U > div > div:nth-child(4) > div > div:nth-child(5) > div:nth-child(2) > div > button"}}],link_configuration:{show:!0,type:"internal",targetSelector:".content-inner-heading"}}],property:{collapse:{collapsable:!0,fc_non_collapsable:!0}}}]}[o]},"".concat(o)):(0,a.jsx)("div",{children:"Please select a valid application type and version"})})}},2515:(t,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>h});var a=i(7437),n=i(2265);i(9590);var o=i(3612),r=i.n(o),s=i(6463);let l={V1:[{tag_type:"h2",text:"Instant Auth + Chat [V1]"},{tag_type:"p",text:"This chat application solution is designed for simple websites built with HTML, JavaScript, and CSS, typically informational sites. It's ideal for products lacking built-in authentication that require seamless integration of both authentication and chat functionality."},{tag_type:"div",children:[{tag_type:"h2",text:"Prerequisites"},{tag_type:"p",text:"To integrate chat into your application, complete the following steps:"},{tag_type:"ol",items:[{text:"Sign up or log in to your MagicChat account.",link_parts:[{text:"Sign up or log in",link:"https://www.google.com/"}]},{tag_type:"li",text:"Create a New App and be sure to select Version V1 during setup."},{tag_type:"li",text:"Navigate to your created app's detail page and locate the credentials."}]}]},{tag_type:"div",children:[{tag_type:"h2",text:"Project Setup"},{tag_type:"p",text:"To integrate chat into your application, follow these steps:"},{tag_type:"div",className:"custom-ordered-list",children:[{tag_type:"div",className:"custom-list-item",children:[{tag_type:"div",className:"list-item-header",text:"1. Load Required Scripts"},{tag_type:"div",className:"sub-items-container",children:[{tag_type:"div",children:[{tag_type:"p",text:"Locate your main entry file (typically index.html) and insert this code snippet into the <head> section. Place it before other dependencies for optimal loading."},{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.socket.io/4.1.2/socket.io.min.js"></script>'}]},{tag_type:"div",children:[{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.jsdelivr.net/gh/magicchat-core/prod-ssc-client-cdns@v0.2.8/bundle.js"></script>'}]}]}]},{tag_type:"div",className:"custom-list-item",children:[{tag_type:"div",className:"list-item-header",text:"2. MagicChat Setup Requires Two Steps"},{tag_type:"div",className:"sub-items-container",children:[{tag_type:"div",children:[{tag_type:"h4",text:"Step 1 – Setup on Initial Landing Pages"},{tag_type:"p",text:"Execute the setUp function on your application's entry point (typically the landing page or root URL). This applies to screen users encounter before authentication."},{tag_type:"code",show_copy:!0,text:'\n<script>\n  document.addEventListener("DOMContentLoaded", async function () {\n    await window.magicchat_io.setUp(\n      "<MAGICCHAT_APP_NAME>", // app_name\n      "<MAGICCHAT_API_KEY>", // api_key\n      false, // header_req (true by default)\n    );\n  });\n</script>'},{tag_type:"callout",type:"info",title:"Parameter Details",children:[{tag_type:"table",headers:["Parameter","Type","Description"],rows:[["app_name","string","Unique application identifier"],["api_key","string","Base64 encoded API key"],["header_req","boolean","Display header with user controls"]]},{tag_type:"callout",type:"warning",title:"Critical Requirement",children:[{tag_type:"p",text:"The setUp function must execute before initialize in all cases."}]}]}]},{tag_type:"div",children:[{tag_type:"h4",text:"Step 2 – Initialize Chat on Target Pages"},{tag_type:"p",text:"Execute the initialize function on any page where the chat interface should appear (e.g., in the bottom-right corner)."},{tag_type:"code",show_copy:!0,text:'\n<script>\n  document.addEventListener("DOMContentLoaded", async function () {\n    await window.magicchat_io.initialize({"app_version":"V1"});\n  });\n</script>'},{tag_type:"callout",type:"info",title:"Parameter Details",children:[{tag_type:"table",headers:["Parameter","Type","Description"],rows:[["app_version","string","MagicChat application version"]]},{tag_type:"mesgTip",title:"Version Validation",children:[{tag_type:"p",text:"Verify the correct app_version is specified."}]}]}]}]}]}]},{tag_type:"h4",text:"Final Implementation"},{tag_type:"p",text:"For single-route applications where the chat interface should appear universally, use this centralized approach:"},{tag_type:"code_with_copy",code:'\n<script>\n  document.addEventListener("DOMContentLoaded", async function () {\n    // Step 1: Initial setup\n    await window.magicchat_io.setUp(\n      "<MAGICCHAT_APP_NAME>",\n      "<MAGICCHAT_API_KEY>", \n      false\n    );\n    \n    // Step 2: Initialize chat\n    await window.magicchat_io.initialize({"app_version":"V1"});\n  });\n</script>',language:"javascript"},{tag_type:"h4",text:"Example Implementation"},{tag_type:"p",text:"View complete implementation examples in our GitHub repository:"},{tag_type:"a",href:"https://github.com/magicchat-core/example__v1/blob/b166e027ad4e841f2698e4817324fef1c7e8d347/index.html#L33",text:"View Implementation Example"},{tag_type:"tabs",items:[{label:"Centralized Implementation",content:[{tag_type:"h4",text:"Centralized Implementation"},{tag_type:"p",text:"For applications with a common root layout (e.g., main index.js or layout component that renders on every route):"},{tag_type:"ul",items:[{text:"Combine both setUp and initialize logic in a single location"},{text:"This ensures the chatbox renders consistently across all routes"},{text:"Avoids code duplication across screens"}]}]},{label:"Route-Specific Implementation",content:[{tag_type:"h4",text:"Route-Specific Implementation"},{tag_type:"p",text:"To limit chat functionality to specific routes:"},{tag_type:"ul",items:[{text:"Run the `setUp` function on initial screen load and run the `initialize` only on screens where chat is needed"},{text:"Use the initialize method on specific route components"},{text:"Provides more control over chat visibility"}]}]}]},{tag_type:"tabs",items:[{label:"Full Header Mode",content:[{tag_type:"h3",text:"Complete Authentication Header Solution"},{tag_type:"p",text:"When you set `header_req` to `true`, MagicChat will automatically add a fully functional header to your application that includes:"},{tag_type:"ul",items:[{text:"User authentication controls (login/logout)"},{text:"User profile management"},{text:"Notification indicators"},{text:"Branding area"},{text:"Responsive navigation menu"}]},{tag_type:"callout",type:"info",title:"Best For",children:[{tag_type:"p",text:"Applications without an existing header or those looking for a complete out-of-the-box authentication solution."}]},{tag_type:"img",src:"/Asset/magicChatImg/full_header_mode.png",alt:"MagicChat Full Header Implementation"}]},{label:"Header-Less Mode",content:[{tag_type:"h3",text:"Custom Authentication Placement"},{tag_type:"p",text:"Set `header_req` to `false` when you already have a header or want to place authentication components in specific locations."},{tag_type:"steps",items:[{title:"Step 1: Initialize MagicChat",content:[{tag_type:"code_with_copy",code:'await window.magicchat_io.setUp(\n          "<Your App Name>", \n          "<Your Api Key>", \n          JSON.stringify({\n            "chat_opener_theme": {\n              "backgroundColor": "rgb(41, 48, 78)" // Chat button color\n            }\n          }),\n          false, // DISABLE MAGICCHAT HEADER\n          "/dashboard" // Redirect after login\n        );',language:"javascript"}]},{title:"Step 2: Place Authentication Components",content:[{tag_type:"p",text:"Add this container where you want authentication controls to appear:"},{tag_type:"code_with_copy",code:'<div id="tezkit-auth-area" ></div>'}]},{title:"Step 3: Customize Styling (Optional)",content:[{tag_type:"p",text:"Add CSS to match your existing design:"},{tag_type:"code_with_copy",code:"#tezkit-auth-area {\n  display: inline-flex;\n  gap: 10px; /* space between buttons */\n  align-items: center;\n}\n\n#tezkit-auth-area button {\n  background-color:orange;\n  color: white;\n  border: none;\n  padding: 10px 16px;\n  border-radius: 8px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n}\n\n#tezkit-auth-area button:hover {\n  background-color: #4338ca;\n  transform: translateY(-1px);\n}\n\n#tezkit-auth-area button:active {\n  transform: translateY(1px);\n  background-color: #3730a3;\n}"}]}]},{tag_type:"img",src:"/Asset/magicChatImg/header_less_mode.png",alt:"Custom Authentication Placement"},{tag_type:"callout",type:"warning",title:"Important Implementation Notes",children:[{tag_type:"ul",items:[{text:"Place the container in your header or wherever authentication should appear"},{text:"Multiple containers are supported for complex layouts"},{text:"Components automatically adapt to authentication state"},{text:"Elements will render as:",sub_items:[{text:"Login/Signup buttons when logged out"}]}]}]},{tag_type:"callout",type:"info",title:"Available Authentication Components to be styled",children:[{tag_type:"table",headers:["Component","Selector","Description"],rows:[["Login Button",".tezkit-login-btn","Triggers login flow"],["Signup Button",".tezkit-signup-btn","Triggers registration flow"]]}]}]}]},{tag_type:"video",src:"https://www.youtube.com/watch?v=MKatoeFYeb8",desc:"Headful Mode Implementation Demo"}]}],V2:[{tag_type:"h2",text:"BYO (Bring Your Own) Auth  +  Chat  [V2]"},{tag_type:"p",text:"This chat application is designed specifically for complex sites or apps built with JavaScript on both the client and server sides. It is ideal for products that already have built-in authentication and are looking to seamlessly integrate robust chat functionality."},{tag_type:"div",children:[{tag_type:"h2",text:"Prerequisite"},{tag_type:"ol",items:[{text:"Signup/Login to your account at MagicChat.",link_parts:[{text:"Signup/Login",link:"https://www.google.com/"}]},{tag_type:"li",text:"Create a New App and be sure to select Version V2 during setup."},{tag_type:"li",text:"Navigate to the App Details page and note your: , App Name, API Key, Tenant ID"}]}]},{tag_type:"div",children:[{tag_type:"h2",text:"Project setup"},{tag_type:"h4",text:"Client Side Integration"},{tag_type:"p",text:"To integrate it into your app, Do the following."},{tag_type:"div",className:"custom-ordered-list",children:[{tag_type:"div",className:"custom-list-item",children:[{tag_type:"div",className:"list-item-header",text:"1. Load The Scripts"},{tag_type:"div",className:"sub-items-container",children:[{tag_type:"div",children:[{tag_type:"p",text:"Locate the main entry file, typically index.html, and insert the following code snippet into the <head> section of the HTML document."},{tag_type:"p",text:"It should ideally be placed head of the root file."},{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.socket.io/4.1.2/socket.io.min.js"></script>'}]},{tag_type:"div",children:[{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.jsdelivr.net/gh/magicchat-core/prod-ssc-client-cdns@v0.2.8/bundle.js">\n</script>'}]}]}]},{tag_type:"div",className:"custom-list-item",children:[{tag_type:"div",className:"list-item-header ",text:"2. Running Magicchat Setup Requires two steps"},{tag_type:"div",className:"sub-items-container",children:[{tag_type:"div",children:[{tag_type:"h4",text:"Step 1 – Initialize on first Logged-Out Screens"},{tag_type:"p",text:"Run the setUp function on the very first screen, where user lands first when they come to the product.This typically applies to your app's landing page or root URL (/)."},{tag_type:"code",show_copy:!0,text:' await window.magicchat_io.setUp(\n                "<MAGICCHAT_APP_NAME>", // app_name\n                "<MAGICCHAT_API_KEY>", // api_key\n              false, // header_req (true by default)\n              );'}]},{tag_type:"div",children:[{tag_type:"h4",text:"Step 2 – Initialize on pages wherever you want to show chat icon to appear."},{tag_type:"p",text:"Run the initialize function on any screen  where you want the chatbot to appear (e.g., bottom right corner)."},{tag_type:"code",show_copy:!0,text:'\n   <script>\n      document.addEventListener("DOMContentLoaded", async function () {\n\n            await window.magicchat_io.initialize({"app_version":"V2"});\n\n\n      });\n    </script>    '}]}]}]}]},{tag_type:"h4",text:"Final Implementation"},{tag_type:"p",text:"For single-route applications where the chat interface should appear universally, use this centralized approach:"},{tag_type:"code_with_copy",code:'\n<script>\n  document.addEventListener("DOMContentLoaded", async () => {\n    const profileData = await window.profileDataPromise; // Change this line to match how your application retrieves profile data\n\n    if (!profileData) {\n      await window.magicchat_io.setUp(\n        "v2_app1",\n        "bGVnYWwxMTFfX1NFUFJBVE9SX192Ml9hcHAx"\n      );\n    } else {\n      await window.magicchat_io.initialize({\n        app_version: "V2",\n        uid: profileData.username,\n      });\n    }\n  });\n</script>',language:"javascript"},{tag_type:"h4",text:"Example Implementation"},{tag_type:"p",text:"View complete implementation examples in our GitHub repository:"},{tag_type:"a",href:"https://github.com/magicchat-core/example__v2/blob/c92055559f06e1a06154d81dc777f07e0d6dffce/templates/base.html#L158",text:"View Implementation Example"},{tag_type:"tabs",items:[{label:"Centralized Implementation",content:[{tag_type:"h4",text:"Centralized Implementation"},{tag_type:"p",text:"For applications with a common root layout (e.g., main index.js or layout component that renders on every route):"},{tag_type:"ul",items:[{text:"Combine both setUp and initialize logic in a single location"},{text:"This ensures the chatbox renders consistently across all routes"},{text:"Avoids code duplication across screens"}]}]},{label:"Route-Specific Implementation",content:[{tag_type:"h4",text:"Route-Specific Implementation"},{tag_type:"p",text:"To limit chat functionality to specific routes:"},{tag_type:"ul",items:[{text:"Run the `setUp` function on initial screen load and run the `initialize` only on screens where chat is needed"},{text:"Use the initialize method on specific route components"},{text:"Provides more control over chat visibility"}]}]}]},{tag_type:"h2",text:"Backend Integration"},{tag_type:"p",text:"For platforms with existing authentication systems, MagicChat requires user onboarding to establish identity mapping between your platform users and MagicChat accounts."},{tag_type:"callout",type:"info",title:"Key Integration Requirement",children:[{tag_type:"p",text:"Each new user must be onboarded with a unique identifier (UID) that serves as the proxy between your platform and MagicChat's user management system."}]},{tag_type:"h3",text:"Onboarding API"},{tag_type:"p",text:"Successfully onboarded users will appear in the MagicChat Admin Panel with their associated applications."},{tag_type:"steps",items:[{title:"Admin Panel - Onboarded Users",content:[{tag_type:"img",src:"Asset/onboarded_user.png",alt:"MagicChat Admin Panel showing onboarded users"}]},{title:"Admin Panel - No Users",content:[{tag_type:"p",text:"Applications without onboarded users will display an empty state:"},{tag_type:"img",src:"Asset/no_users_admin.png",alt:"MagicChat Admin Panel showing no onboarded users"}]}]},{tag_type:"h3",text:"User Onboarding Methods"},{tag_type:"tabs",items:[{label:"Backend Integration",content:[{tag_type:"h4",text:"REST API Endpoint"},{tag_type:"p",text:"Use our onboarding API to programmatically register users:"},{tag_type:"code_with_copy",code:"POST https://auth.addchat.tech/dev/onboarding",language:"http"},{tag_type:"h4",text:"Request Example"},{tag_type:"code_with_copy",code:'curl --location \'https://auth.addchat.tech/dev/onboarding\' \\\n      --header \'X-API-Key: YOUR_API_KEY\' \\\n      --header \'Content-Type: application/json\' \\\n      --data \'{\n        "uid": "unique_user_identifier_123",\n        "app_name": "your_application_name",\n        "version": "V2"\n      }\'',language:"bash"},{tag_type:"table",headers:["Parameter","Type","Description"],rows:[["uid","string","Your platform's unique user identifier"],["app_name","string","Your registered MagicChat application name"],["version","string","for BYO Auth Chat API version is `V2`"]]}]},{label:"Frontend Integration",content:[{tag_type:"h4",text:"Client-Side Onboarding"},{tag_type:"p",text:"Call the onboarding method directly from your frontend code:"},{tag_type:"code_with_copy",code:'await window.magicchat_io.onboarding(\n        { \n          "uid": "UNIQUE_USER_ID_FROM_YOUR_PLATFORM" \n        },\n        {\n          "version": "V2",\n          "app_name": "your_application_name"\n        }\n      )',language:"javascript"},{tag_type:"callout",type:"warning",title:"Implementation Note",children:[{tag_type:"p",text:"This method should be called immediately after successful user registration in your application."}]}]},{label:"Admin Panel",content:[{tag_type:"h4",text:"Manual User Onboarding"},{tag_type:"p",text:"Manually onboard users through the MagicChat Admin Interface:"},{tag_type:"img",src:"Asset/onboarding_via_admin.png",alt:"MagicChat Admin Panel user onboarding interface"},{tag_type:"steps",items:[{title:"Navigate to Users Section",content:[{tag_type:"p",text:"Access the Users management area in your application's admin panel"}]},{title:"Select 'Add User'",content:[{tag_type:"p",text:"Complete the user creation form with required details"}]},{title:"Share Credentials",content:[{tag_type:"p",text:"Provide the generated credentials to the end-user through secure channels"}]}]}]}]},{tag_type:"h3",text:"Logout Cleanup"},{tag_type:"p",text:"Since authentication is managed locally within your own platform, it is essential to also clean up the MagicChat session when a user logs out from your system."},{tag_type:"callout",type:"warning",title:"Important Cleanup Step",children:[{tag_type:"p",text:"Failing to call this method may result in session persistence, causing the chatbox to remain visible after logout."}]},{tag_type:"h4",text:"Usage"},{tag_type:"code_with_copy",code:"window.magicchat_io.logout?.();",language:"javascript"},{tag_type:"p",text:"You should call this method immediately when your user logs out. It ensures MagicChat cleans up all user-related sessions and data."},{tag_type:"h4",text:"Example Implementation"},{tag_type:"p",text:"See the following GitHub example where logout cleanup is properly handled:"},{tag_type:"a",href:"https://github.com/magicchat-core/example__v2/blob/402cbcd3d07fc8cca952fdf6ed1c18b5a2a90b1a/templates/base.html#L95",text:"Logout Example on GitHub"},{tag_type:"callout",type:"info",title:"Implementation Best Practices",children:[{tag_type:"ul",items:[{text:"Trigger onboarding immediately after user registration"},{text:"For bulk onboarding of existing users, contact our support team for batch processing options"},{text:"Don't miss to logout to perform cleanup whenever user is logging out of your platform."}]}]},{tag_type:"video",src:"https://www.youtube.com/watch?v=MKatoeFYeb8",desc:"Demo for V2"}]}],V3:[{tag_type:"h2",text:"CMS-Ready Chat (Wordpress) [V3]"},{tag_type:"p",text:"This chat application is designed specifically for Wordpress using native wp authentication. It is ideal for products that already have built-in authentication probably using some plugin and are looking to seamlessly integrate robust chat functionality."},{tag_type:"div",children:[{tag_type:"h2",text:"Prerequisite"},{tag_type:"p",text:"To integrate Chat into your app, do the following:"},{tag_type:"ol",items:[{text:"Signup/Login to your account at MagicChat.",link_parts:[{text:"Signup/Login",link:"https://www.google.com/"}]},{tag_type:"li",text:"Create an app as per your use case. (Be Sure to choose the right version V3)"},{tag_type:"li",text:"Go To created app's  detail page and locate the credentials."}]}]},{tag_type:"div",children:[{tag_type:"h2",text:"Project Setup"},{tag_type:"h3",text:"Client Side Integration"},{tag_type:"callout",type:"success",title:"Plugin Installation",children:[{tag_type:"div",children:[{tag_type:"div",children:[{tag_type:"h4",text:"MagicChat WordPress Plugin"},{tag_type:"a",href:"/addChatPlugin_prod.zip",text:"Download Plugin",download:!0}]}]}]},{tag_type:"steps",items:[{title:"Add MagicChat Credentials",content:[{tag_type:"p",text:"After installing the plugin, navigate to MagicChat settings in your WordPress admin panel and enter your credentials:"},{tag_type:"img",src:"Asset/add_credentials_wp.png",alt:"MagicChat credentials configuration in WordPress"}]},{title:"Verify Integration",content:[{tag_type:"p",text:"Confirm the chat utility appears correctly on your site:"},{tag_type:"img",src:"Asset/fashoni_chat_opener_visible.png",alt:"MagicChat opener visible on website"}]}]},{tag_type:"div",children:[{tag_type:"h4",text:"Integration Walkthrough"},{tag_type:"p",text:"Watch this tutorial below for complete setup instructions:"},{tag_type:"video",src:"https://www.youtube.com/watch?v=MKatoeFYeb8",desc:"MagicChat WordPress Integration Tutorial"}]}]}],V4:[{tag_type:"h2",text:"No Auth  but  Chat  [V4]"},{tag_type:"p",text:"This chat application is designed specifically for complex sites or apps have no built-in authentication and niether want one but chat functionality only."},{tag_type:"div",children:[{tag_type:"h2",text:"Prerequisite"},{tag_type:"ol",items:[{text:"Signup/Login to your account at MagicChat.",link_parts:[{text:"Signup/Login",link:"https://www.google.com/"}]},{tag_type:"li",text:"Create a New App and be sure to select Version V4 during setup."},{tag_type:"li",text:"Navigate to the App Details page and note your: , App Name, API Key, Tenant ID"}]}]},{tag_type:"div",children:[{tag_type:"h2",text:"Project setup"},{tag_type:"h4",text:"Client Side Integration"},{tag_type:"p",text:"To integrate it into your app, Do the following."},{tag_type:"div",className:"custom-ordered-list",children:[{tag_type:"div",className:"custom-list-item",children:[{tag_type:"div",className:"list-item-header",text:"1. Load The Scripts"},{tag_type:"div",className:"sub-items-container",children:[{tag_type:"div",children:[{tag_type:"p",text:"Locate the main entry file, typically index.html, and insert the following code snippet into the <head> section of the HTML document."},{tag_type:"p",text:"It should ideally be placed head of the root file."},{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.socket.io/4.1.2/socket.io.min.js"></script>'}]},{tag_type:"div",children:[{tag_type:"code",show_copy:!0,text:'<script src="https://cdn.jsdelivr.net/gh/magicchat-core/prod-ssc-client-cdns@v0.2.8/bundle.js">\n</script>'}]}]}]},{tag_type:"div",className:"custom-list-item",children:[{tag_type:"div",className:"list-item-header ",text:"2. Running Magicchat Setup Requires two steps"},{tag_type:"div",className:"sub-items-container",children:[{tag_type:"div",children:[{tag_type:"h4",text:"Step 1 – Initialize on first Logged-Out Screens"},{tag_type:"p",text:"Run the setUp function on the very first screen, where user lands first when they come to the product.This typically applies to your app's landing page or root URL (/)."},{tag_type:"code",show_copy:!0,text:'\n    <script>\n      document.addEventListener("DOMContentLoaded", async function () {\n        const token = localStorage.getItem("tezkit_token");\n        if (!token) {\n          await window.magicchat_io.setUp(\n            "<YOUR_MAGICCHAT_API_NAME>", \n            "<YOUR_MAGICCHAT_API_KEY>"\n          );\n\n        } \n      });\n    </script> '}]},{tag_type:"div",children:[{tag_type:"h4",text:"Step 2 – Initialize on pages wherever you want to show chat icon to appear."},{tag_type:"p",text:"Run the initialize function on any screen  where you want the chatbot to appear (e.g., bottom right corner)."},{tag_type:"code",show_copy:!0,text:'\n     <script>\n      document.addEventListener("DOMContentLoaded", async function () {\n        const token = "NO_AUTH_REQUIRED" \n        if (token) {\n          await window.magicchat_io.initialize(token);\n        } \n      });\n    </script>                      '}]}]}]}]},{tag_type:"h4",text:"Final Implementation"},{tag_type:"p",text:"For single-route applications where the chat interface should appear universally, use this centralized approach:"},{tag_type:"code_with_copy",code:'\n<script>\n  document.addEventListener("DOMContentLoaded", async function () {\n    // Step 1: Initial setup\n    await window.magicchat_io.setUp(\n      "<MAGICCHAT_APP_NAME>",\n      "<MAGICCHAT_API_KEY>", \n      false\n    );\n    \n    // Step 2: Initialize chat\n    await window.magicchat_io.initialize({"app_version":"V4"});\n  });\n</script>',language:"javascript"},{tag_type:"h4",text:"Example Implementation"},{tag_type:"p",text:"View complete implementation examples in our GitHub repository:"},{tag_type:"a",href:"https://github.com/magicchat-core/example__v1/blob/dcd14cf06de9b13dd7e79e59c499e7bf294c8cb8/index.html#L39",text:"View Implementation Example"},{tag_type:"tabs",items:[{label:"Centralized Implementation",content:[{tag_type:"h4",text:"Centralized Implementation"},{tag_type:"p",text:"For applications with a common root layout (e.g., main index.js or layout component that renders on every route):"},{tag_type:"ul",items:[{text:"Combine both setUp and initialize logic in a single location"},{text:"This ensures the chatbox renders consistently across all routes"},{text:"Avoids code duplication across screens"}]}]},{label:"Route-Specific Implementation",content:[{tag_type:"h4",text:"Route-Specific Implementation"},{tag_type:"p",text:"To limit chat functionality to specific routes:"},{tag_type:"ul",items:[{text:"Run the `setUp` function on initial screen load and run the `initialize` only on screens where chat is needed"},{text:"Use the initialize method on specific route components"},{text:"Provides more control over chat visibility"}]}]}]},{tag_type:"p",text:"Successfully onboarded users will appear in the MagicChat Admin Panel with their associated applications."},{tag_type:"steps",items:[{title:"Admin Panel - Onboarded Users",content:[{tag_type:"img",src:"Asset/onboarded_user.png",alt:"MagicChat Admin Panel showing onboarded users"}]},{title:"Admin Panel - No Users",content:[{tag_type:"p",text:"Applications without onboarded users will display an empty state:"},{tag_type:"img",src:"Asset/no_users_admin.png",alt:"MagicChat Admin Panel showing no onboarded users"}]}]},{tag_type:"callout",type:"info",title:"User persists only till session",children:[{tag_type:"ul",items:[{text:"Means if browser is closed and reopen it will be considered as new user."}]}]},{tag_type:"video",src:"https://www.youtube.com/watch?v=MKatoeFYeb8",desc:"Demo for V2"}]}]};i(551);var c=i(8455),p=i(4009),d=i(8867);let g=()=>{let[t,e]=(0,n.useState)({app_type:null,version_type:"V1"});console.log("do we have a fitler???selectedFilter",t),(0,s.useSearchParams)();let[i,o]=(0,n.useState)(null),[g,h]=(0,n.useState)(Object.keys(l).V1);console.log(g,"why selected key is not 'P2A'");let[_,y]=(0,n.useState)(!1),[u,m]=(0,n.useState)(!1);(0,n.useEffect)(()=>{if(t){let e=function(t){let e=t.app_types,i=[];for(let r in e){console.log(r,"hwo to get mode",t);let s=e[r].version_types;for(let e in s){var a,n;i.push("".concat(r,"__").concat(e));let s=null===(n=t.app_types[r])||void 0===n?void 0:null===(a=n.version_types[e])||void 0===a?void 0:a.selected_mode;console.log("modesdfsdafsd",s),s&&o(s)}}return i}(t);console.log(e,"keyscurrent sleelcteoirn",t,e),1==e.length&&setSelectedTab(e[0])}},[t]);let v=t=>{console.log("WRWERWEQRWE",t),h(t)},x=()=>{y(t=>!t)};return(0,n.useEffect)(()=>{let t=()=>{m(window.innerWidth<=468)};return t(),window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)},[]),(0,n.useEffect)(()=>{let t=()=>{m(window.innerWidth<=1025)};return t(),window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)},[]),(0,a.jsx)("div",{className:r()["document-container"],children:(0,a.jsxs)("div",{className:r().doc_core_wrapper,children:[!u&&(0,a.jsx)("div",{className:r().doc_sidebar,children:(0,a.jsx)(p.Z,{isMobile:u,selectedKey:g,isDropdownOpen:_,toggleDropdown:x,payload:l,handleKeyClick:v,selectedFilter:t})}),(0,a.jsx)("div",{className:r().rightWrap,children:(0,a.jsxs)("div",{className:r()["main-content"],children:[(0,a.jsx)(c.Z,{setSelectedFilter:e}),u&&(0,a.jsx)("div",{className:r().mobileSidebarWrapper,children:(0,a.jsx)(p.Z,{isMobile:u,selectedKey:g,isDropdownOpen:_,toggleDropdown:x,payload:l,handleKeyClick:v,selectedFilter:t})}),t?(0,a.jsxs)(a.Fragment,{children:[(()=>{if(console.log("selesdtsdfilter",t),!t||!t.version_type)return(0,a.jsx)("div",{children:"Select a key from the left"});let e=l[t.version_type];return console.log(t,"DScontentSDFASDSDFFSAD",e),(0,a.jsx)("div",{className:r()["content-area"],children:(0,a.jsx)(d.default,{content:e},4444)})})(),(0,a.jsxs)("div",{className:r().integration_successful,children:[(0,a.jsx)("p",{children:"Congratulations Integration Should be Successfully Done by now!"}),(0,a.jsx)("p",{children:"Your users can now sign up and seamlessly chat with the Admin Team, enabling two-way communication."}),(0,a.jsx)("p",{children:"Please Contact Our Support Team if you faced any issues. Thank You!"})]})]}):(0,a.jsx)("div",{className:r().noFilterMessage,children:"Kinldy select the right filters for you from top."})]})})]})})},h=()=>(0,a.jsx)(n.Suspense,{fallback:(0,a.jsx)("div",{children:"Loading..."}),children:(0,a.jsx)(g,{})})},9590:()=>{},7377:t=>{t.exports={"filter-container":"filterSty_filter-container__1BeqS","options-list":"filterSty_options-list__H9Qw6","filter-group":"filterSty_filter-group__2N0S2","mobile-dropdown-wrapper":"filterSty_mobile-dropdown-wrapper__KQlh_","button-group":"filterSty_button-group__DLD_2","option-button":"filterSty_option-button__Z0ccI",active:"filterSty_active__3vt_K",filterIconWrapper:"filterSty_filterIconWrapper__zVJ4o","option-container":"filterSty_option-container__AB_bi","submit-btn":"filterSty_submit-btn__9ODrv","filter-header":"filterSty_filter-header__a_vsF",filterIcon:"filterSty_filterIcon__0WjtP","show-on-mobile":"filterSty_show-on-mobile__1JaWi"}},3612:t=>{t.exports={"content-area":"docPageSty_content-area__heU1U","document-container":"docPageSty_document-container__ES_cf",doc_core_wrapper:"docPageSty_doc_core_wrapper__8iYQS",doc_sidebar:"docPageSty_doc_sidebar__Cn_h3",rightWrap:"docPageSty_rightWrap__YUmnZ","main-content":"docPageSty_main-content__YiGGW",mainHeading:"docPageSty_mainHeading__e8kU5",integration_successful:"docPageSty_integration_successful__dHRO2",noFilterMessage:"docPageSty_noFilterMessage__roUrm",mobileSidebarWrapper:"docPageSty_mobileSidebarWrapper__17wmU"}}},t=>{var e=e=>t(t.s=e);t.O(0,[6973,4837,7240,5706,3981,7130,6215,1744],()=>e(4169)),_N_E=t.O()}]);